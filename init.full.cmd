@if "%_echo%"=="" echo off
GOTO :Start
#
#  Corext Environment Initialization
#
#    Setup the environment to be responsive and contained to the commandline
#    https://microsoft.sharepoint.com/teams/corext/LivingDocs/CorextInitialization.aspx
#
:Start

@REM -----------------------------------------------------------------------------------
@REM -- RepoConfig - minimal tool config [anything of size should be packed/shared]
@REM -----------------------------------------------------------------------------------

@REM -- Product being built (CorextBranch when not in Git)
  SET CorextProduct=CoreXT
  
  @REM -- Pull packages and setup the enlistment
  @echo INF: [%time%] Starting CoreXT initialization
  CALL :ConfigureCorext || GOTO :EOF

  CALL :ExpandPackages || GOTO :EOF

  CALL :BootstrapCorext || GOTO :EOF
  
  @REM -- Configure purger with our preferences
  SET PURGER=%PURGER% -si -norecycle -i %PackageAddressGenDir:\=\\%.*
  
  @echo INF: [%time%] End basic CoreXT initialization, start team specialization
  @REM ----------------------------------------------------------------------------------------------
  @REM -- If you need to customize your init.cmd, do not edit this file,
  @REM -- Instead create a new init file under %ROOT%\.config\corext.init.cmd and edit that instead.
  @REM ----------------------------------------------------------------------------------------------
  IF EXIST "%ROOT%\.config\corext.init.cmd" call "%ROOT%\.config\corext.init.cmd"
  
  @REM -----------------------------------------------------------------------------------
  @echo INF: [%time%] End of init.full.cmd
  GOTO :EOF
  
@REM -----------------------------------------------------------------------------------
@REM -----------------------------------------------------------------------------------
:ConfigureCorext
  @REM -- Standard Corext Bootstrapper
  FOR %%I IN (%~dp0\.corext\..) DO @SET ROOT=%%~fI
  SET BaseDir=%ROOT%
  SET CoreXTConfig=%ROOT%\.corext
  IF NOT DEFINED CoreXTConfigFile SET CoreXTConfigFile=%CoreXTConfig%\corext.config
  GOTO :EOF
  
  
@REM -----------------------------------------------------------------------------------
@REM -----------------------------------------------------------------------------------
:ExpandPackages
  ECHO [%time%] Generating Expanded CoreXT config

  SET ExpandedCoreXTConfigFile=%ROOT%\.gen\corext.expanded.config
  SET ResolveCorextConfig=%ROOT%\.config\corext.ResolveCorext.config
  IF NOT EXIST %ResolveCoreXTConfig% (
    ECHO [Error] MISSING corext.ResolveCorext.config: %ResolveCoreXTConfig%
    ECHO This is required, please copy it from the Templates-CoreXT repository
    EXIT /B 1
  )

  @REM To Prevent updating the ResovleCoreXTConfig in the repo, try to use one in the NugetMachineInstallRoot
  IF EXIST "%NugetMachineInstallRoot%" (
    IF NOT EXIST %NugetMachineInstallRoot%\corext.ResolveCorext.config COPY %ROOT%\.config\corext.ResolveCorext.config %NugetMachineInstallRoot%\corext.ResolveCorext.config
    SET "ResolveCorextConfig=%NugetMachineInstallRoot%\corext.ResolveCorext.config"
  )
  SET TEMPCoreXTConfigFile=%CoreXTConfigFile%
  SET CoreXTConfigFile=%ResolveCorextConfig%
  
  SET OnlineCommand=
  SET Pipe=

  IF /I "%IsOfficialBuild%"=="true" SET OnlineCommand=--Online
  IF /I "%QBUILD_DISTRIBUTED%"=="1" SET UpdatePackageVersionCommand=--DoNotUpdatePackageVersion
  
  REM Piping to null to keep the output clean, but still show warnings and errors
  CALL :BootstrapCorext || (
      SET CoreXTConfigFile=%TEMPCoreXTConfigFile%
      EXIT /B 1
  )
  
  @echo INF: [%time%] Resolving CoreXT Configuration
  SET CoreXTConfigFile=%TEMPCoreXTConfigFile%
  CALL ResolveCorextConfig --SourceRoot %ROOT%\src --ExpandedCorextConfig %ExpandedCoreXTConfigFile% %OnlineCommand% --ExpandPackages --AutoUpdateResolveCoreXTConfig %UpdatePackageVersionCommand% || (
    ECHO.
    ECHO ******************************************************************************************
    ECHO [Error] Your packages could not be expanded properly.
    ECHO [Error] If you continue to see this message, close this command window and open a new one.
    ECHO ******************************************************************************************
    ECHO.
    EXIT /B 1
  )
  SET CoreXTConfigFile=%ExpandedCoreXTConfigFile%
  @echo INF: [%time%] Finished resolving CoreXT configuration
  GOTO :EOF
  
  
  @REM -----------------------------------------------------------------------------------
  @REM -----------------------------------------------------------------------------------
:BootstrapCorext
  @echo INF: [%time%] Starting to bootstrap CoreXT
  SET PackageAddressGenDir=%ROOT%\.corext\gen
  CALL "%CoreXTConfig%\corextBoot.exe" init -bootstrap || (
    ECHO.
    ECHO ******************************************************************************************
    ECHO [Error] CoreXT could not be properly initialized.
    ECHO [Error] If you continue to see this message, close this command window and open a new one.
    ECHO ******************************************************************************************
    ECHO.
    exit /b 1
  )
  @echo INF: [%time%] End CoreXT bootstrap, starting package initialization

  CALL "%PackageAddressGenDir%\init.cmd" -recurse
  IF DEFINED TEMPCoreXTConfigFile SET CoreXTConfigFile=%TEMPCoreXTConfigFile%
  
  @echo INF: [%time%] End package initialization
  GOTO :EOF
