<!--
***********************************************************************************************
_AfterAll.targets

Override _AfterAll.targets imported from CustomExtendedTargets dynamically.
Used to do any final overrides after all other targets have completed

Copyright (C) Microsoft Corporation. All rights reserved.
***********************************************************************************************
-->

<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  
  <!-- Inject custom build dependencies here. -->
  <PropertyGroup>
    <BuildDependsOn Condition="'$(BuildingInsideVisualStudio)' != 'true'">
      $(BuildDependsOn);Hello_AfterBuild;CopyPDB_AfterBuild
    </BuildDependsOn>
    <Loaded_AfterAll>true</Loaded_AfterAll>
  </PropertyGroup>

  <!-- Override InjectAssemblyDescription in CoreTargets.OneBranch, to prevent unnecessary Localization churn. -->
  <Target Name="InjectAssemblyDescription" />
  
  <!-- Hello _AfterBuild -->
  <Target Name="Hello_AfterBuild">
	<Message Text="Hello, I am the _AfterBuild target running from \.config\.targets\$(MSBuildThisFile)" />
  </Target>

  <PropertyGroup Condition="'$(OutputType)'=='library' Or '$(OutputType)'=='Library'">
    <PDBType>DLL</PDBType>
  </PropertyGroup>
  <PropertyGroup Condition="'$(OutputType)'=='exe' Or '$(OutputType)'=='Exe' Or '$(OutputType)'=='Winexe'">
    <PDBType>EXE</PDBType>
  </PropertyGroup>
  
  <Target Name="CopyPDB_AfterBuild" Condition="'$(PDBType)'!='' and !$(MSBuildProjectDirectoryNoRoot.ToLower().Contains('\src\testcode\'))" >
    <Message Text="Copying pdb into Symbols folder" Condition="Exists('$(OutDir)\$(AssemblyName).pdb')" />
    <ItemGroup Condition="Exists('$(OutDir)\$(AssemblyName).pdb')" >
      <Robocopy Include="$(OutDir)\$(AssemblyName).pdb">
        <DestinationFolder>$(OutputRoot)\Symbols\$(BUILDTYPE)\$(BUILDARCHITECTURE)\PDB\$(PDBType)</DestinationFolder>
      </Robocopy>
    </ItemGroup>
  </Target>
  
  <!-- 
    This makes references using assemblies by HintPath and ignore GAC if HintPath specified
  -->
  <Target Name="EnsureReferencesAreFromPackage" BeforeTargets="BeforeBuild">
    <ItemGroup>
      <Reference Include="%(Reference.HintPath)" Condition="'%(Reference.HintPath)' != ''">
        <HintPath/>
        <SpecificVersion/>
        <Aliases>%(Reference.Aliases)</Aliases>
        <EmbedInteropTypes>%(Reference.EmbedInteropTypes)</EmbedInteropTypes>
        <Private>%(Reference.Private)</Private>
      </Reference>

      <Reference Remove="@(Reference)" Condition="'%(Reference.HintPath)' != ''" />
    </ItemGroup>
  </Target>
</Project>