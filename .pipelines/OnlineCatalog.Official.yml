#################################################################################
#                           Onebranch Retail Pipeline                           #
# This pipeline was created by EasyStart from a sample located at:              #
#   https://aka.ms/obpipelines/easystart/samples                                #
# Documentation:  https://aka.ms/obpipelines                                    #
# Yaml Schema:    https://aka.ms/obpipelines/yaml/schema                        #
# Retail Tasks:   https://aka.ms/obpipelines/tasks                              #
# Support:        https://aka.ms/onebranchsup                                   #
#################################################################################

trigger: none # https://aka.ms/obpipelines/triggers

parameters: # parameters are shown up in ADO UI in a build queue time
- name: 'debug'
  displayName: 'Enable debug output'
  type: boolean
  default: false

variables:
  CDP_DEFINITION_BUILD_COUNT: $[counter('', 0)] # needed for onebranch.pipeline.version task https://aka.ms/obpipelines/versioning
  system.debug: ${{ parameters.debug }}
  ENABLE_PRS_DELAYSIGN: 1
  ROOT: $(Build.SourcesDirectory)
  REPOROOT: $(Build.SourcesDirectory)
  OUTPUTROOT: $(REPOROOT)\out
  NUGET_XMLDOC_MODE: none
  major: 1
  minor: 0
  patch: $[counter('counter21', 173)]
  build: 0
  SKIP_NPM_AUTH: 1
 # ob_reddog_enabled: true

  WindowsContainerImage: 'cdpxwin1809.azurecr.io/global/vse2019:latest' # Docker image which is used to build the project https://aka.ms/obpipelines/containers

resources:
  repositories: 
    - repository: templates
      type: git
      name: OneBranch.Pipelines/GovernedTemplates
      ref: refs/heads/main

extends:
  template: v2/OneBranch.Official.CrossPlat.yml@templates # https://aka.ms/obpipelines/templates
  parameters:
    cloudvault: # https://aka.ms/obpipelines/cloudvault
      enabled: true
   reddog: # https://aka.ms/obpipelines/reddog
      enabled: true
    globalSdl: # https://aka.ms/obpipelines/sdl
       tsa:
         enabled: true # onebranch publish all sdl results to TSA. If TSA is disabled all SDL tools will forced into 'break' build mode.
       credscan:
         suppressionsFile: $(Build.SourcesDirectory)\.config\CredScanSuppressions.json
      #policheck:
       # break: true # always break the build on policheck issues. You can disable it by setting to 'false'
      # suppression:
      #   suppressionFile: $(Build.SourcesDirectory)\.gdn\global.gdnsuppress

    stages:
    - stage: build
      jobs:
      - job: main
        pool:
          type: windows  # read more about custom job pool types at https://aka.ms/obpipelines/yaml/jobs
        
        variables:
           ob_outputDirectory: '$(Build.SourcesDirectory)\out' # this directory is uploaded to pipeline artifacts, reddog and cloudvault. More info at https://aka.ms/obpipelines/artifacts
           ob_sdl_codeSignValidation_excludes:  -|**\Debug\**;
          # ob_sdl_binskim_break: true # https://aka.ms/obpipelines/sdl
         

        steps:
        
          - task: MSBuild@1
            displayName: 'Build Product'
            inputs:
              solution: '$(Build.SourcesDirectory)\SystemCenterOnlineCatalogBuild.sln'
              msbuildLocationMethod: 'location'
              msbuildLocation: 'C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Current\Bin\MSBuild.exe'
              platform: 'x64'
              configuration: 'Debug'
              msbuildArguments: '/t:Restore,build'
              clean: true
              maximumCpuCount: true
              logProjectEvents: true
              createLogFile: true
              
          - task: MSBuild@1
            displayName: 'Build Product'
            inputs:
              solution: '$(Build.SourcesDirectory)\SystemCenterOnlineCatalogBuild.sln'
              msbuildLocationMethod: 'location'
              msbuildLocation: 'C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Current\Bin\MSBuild.exe'
              platform: 'x64'
              configuration: 'Release'
              msbuildArguments: '/t:Restore,build'
              clean: true
              maximumCpuCount: true
              logProjectEvents: true

          - task: CopyFiles@2
            inputs:
             SourceFolder: '$(Build.SourcesDirectory)\src\product\'
             Contents: '**\bin\**'
             TargetFolder: '$(Build.SourcesDirectory)\out\'

          # - task: MSBuild@1
          #   displayName: 'Build Testcode'
          #   continueOnError: true
          #   inputs:
          #     solution: '$(Build.SourcesDirectory)\src\Testcode\SystemCenterOnlineTestCode.sln'
          #     msbuildLocationMethod: 'location'
          #     msbuildLocation: 'C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Current\Bin\MSBuild.exe'
          #     platform: 'Any CPU'
          #     configuration: 'Debug'
          #     msbuildArguments: '/t:Restore,build'
          #     clean: true
          #     maximumCpuCount: true
          #     logProjectEvents: true

              
          # - task: CopyFiles@2
          #   inputs:
          #    SourceFolder: '$(Build.SourcesDirectory)\src\TestCode'
          #    Contents: '**\bin\**'
          #    TargetFolder: '$(Build.SourcesDirectory)\out\'

          - task: onebranch.pipeline.signing@1
            inputs:
              command: 'sign'
              signing_profile: 'internal_azure_service'
              files_to_sign: '**/*.exe;**/*.dll;**/*.ps1'
              search_root: '$(Build.SourcesDirectory)\out'
         
