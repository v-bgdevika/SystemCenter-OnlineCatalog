#################################################################################
#                           Onebranch Retail Pipeline                           #
# This pipeline was created by EasyStart from a sample located at:              #
#   https://aka.ms/obpipelines/easystart/samples                                #
# Documentation:  https://aka.ms/obpipelines                                    #
# Yaml Schema:    https://aka.ms/obpipelines/yaml/schema                        #
# Retail Tasks:   https://aka.ms/obpipelines/tasks                              #
# Support:        https://aka.ms/onebranchsup                                   #
#################################################################################

trigger: none # https://aka.ms/obpipelines/triggers

# name: $(major).$(minor).$(patch).$(build)
name: $(MAJOR).$(MINOR).$(BUILD).$(REVISION)

parameters: # parameters are shown up in ADO UI in a build queue time
- name: 'debug'
  displayName: 'Enable debug output'
  type: boolean
  default: false

variables:
  CDP_DEFINITION_BUILD_COUNT: $[counter('', 0)] # needed for onebranch.pipeline.version task https://aka.ms/obpipelines/versioning
  system.debug: ${{ parameters.debug }}
  ENABLE_PRS_DELAYSIGN: 1
  ROOT: $(Build.SourcesDirectory)
  REPOROOT: $(Build.SourcesDirectory)
  OUTPUTROOT: $(REPOROOT)\out
  NUGET_XMLDOC_MODE: none
  MAJOR: 1
  MINOR: 0
  BUILD: $[counter(variables['MINOR'], 0)]
  REVISION: 0

  WindowsContainerImage: 'cdpxwin1809.azurecr.io/global/vse2019:latest' # Docker image which is used to build the project https://aka.ms/obpipelines/containers

resources:
  repositories: 
    - repository: templates
      type: git
      name: OneBranch.Pipelines/GovernedTemplates
      ref: refs/heads/main

extends:
  template: v2/OneBranch.NonOfficial.CrossPlat.yml@templates # https://aka.ms/obpipelines/templates
  parameters:
    cloudvault: # https://aka.ms/obpipelines/cloudvault
      enabled: false
    # globalSdl: # https://aka.ms/obpipelines/sdl
      # tsa:
        # enabled: false # onebranch publish all sdl results to TSA. If TSA is disabled all SDL tools will forced into 'break' build mode.
      credscan:
         suppressionsFile: $(Build.SourcesDirectory)\.config\CredScanSuppressions.json
      binskim:
        break: true # always break the build on binskim issues. You can disable it by setting to 'false'
      policheck:
        break: true # always break the build on policheck issues. You can disable it by setting to 'false'
      roslyn:
        break: true # Roslyn issues. You can disable it by setting to 'false'

    stages:
    - stage: build
      jobs:
      - job: main
        pool:
          type: windows  # read more about custom job pool types at https://aka.ms/obpipelines/yaml/jobs
        
        variables:
           ob_outputDirectory: '$(Build.SourcesDirectory)\out' # this directory is uploaded to pipeline artifacts, reddog and cloudvault. More info at https://aka.ms/obpipelines/artifacts
           ob_sdl_binskim_enabled: true
           ob_sdl_roslyn_break: true
           ob_sdl_binskim_scanOutputDirectoryOnly: true
         
        steps:
            

         - task: PowerShell@2
           inputs:
            filePath: '$(Build.SourcesDirectory)\.config\dllversioning.ps1'
            arguments: $(Build.BuildNumber)
                                 
         - task: MSBuild@1
           displayName: 'Build Product'
           inputs:
              solution: '$(Build.SourcesDirectory)\SystemCenterOnlineCatalogBuild.sln'
              msbuildLocationMethod: 'location'
              msbuildLocation: 'C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Current\Bin\MSBuild.exe'
              platform: 'x64'
              configuration: 'Debug'
              msbuildArguments: '/t:Restore,build'
              clean: true
              maximumCpuCount: true
              logProjectEvents: true
              createLogFile: true

         - task: MSBuild@1
           displayName: 'Build Product'
           inputs:
              solution: '$(Build.SourcesDirectory)\SystemCenterOnlineCatalogBuild.sln'
              msbuildLocationMethod: 'location'
              msbuildLocation: 'C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Current\Bin\MSBuild.exe'
              platform: 'x64'
              configuration: 'Release'
              msbuildArguments: '/t:Restore,build'
              clean: true
              maximumCpuCount: true
              logProjectEvents: true
              createLogFile: true

        
         - task: CopyFiles@2
           inputs:
             SourceFolder: '$(Build.SourcesDirectory)\src\product\'
             Contents: '**\bin\**'
             TargetFolder: '$(Build.SourcesDirectory)\out\'
             
         - task: Semmle@1
           displayName: 'codeql'
           inputs:
             sourceCodeDirectory: '$(Build.SourcesDirectory)'
             language: 'csharp'
             querySuite: 'Recommended'
             timeout: '1800'
             ram: '16384'
             addProjectDirToScanningExclusionList: true
             
         - task: securedevelopmentteam.vss-secure-development-tools.build-task-roslynanalyzers.RoslynAnalyzers@3
           displayName: 'Run Roslyn Analyzers'
           inputs:
             copyLogsOnly: true

         - task: CmdLine@2
           displayName: 'Build SQL'
           inputs:
             script: 'createAdminStoredProcedureSql.cmd'
              
          # - task: MSBuild@1
            # displayName: 'Build Testcode'
            # continueOnError: true
            # inputs:
              # solution: '$(Build.SourcesDirectory)\src\Testcode\SystemCenterOnlineTestCode.sln'
              # msbuildLocationMethod: 'location'
              # msbuildLocation: 'C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Current\Bin\MSBuild.exe'
            # #   platform: 'Any CPU'
            # #  configuration: 'Debug'
              # msbuildArguments: '/t:Restore,build'
              # clean: true
              # maximumCpuCount: true
              # logProjectEvents: true

              
          # - task: CopyFiles@2
            # inputs:
             # SourceFolder: '$(Build.SourcesDirectory)\src\TestCode'
             # Contents: '**\bin\**'
             # TargetFolder: '$(Build.SourcesDirectory)\out\'

            